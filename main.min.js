const querystring=window.location.search,urlParams=new URLSearchParams(querystring),validpaths=["OTIwNzk4NDY=","OTc3NjE3Njg=","MTU2NDkzODQ"],plans=validpaths.includes(btoa(urlParams.get("id")))?{"grupa 1":{startingHour:[8,0],lessonSpan:45,breaks:[5,10,15,5,5,10,5,5],lessons:[{"Poniedziałek":[null,null,"Angielski","Wychowaw.","Historia","Matma","Filozofia","Religia",null]},{Wtorek:[null,null,"WOS","Matma","EDB","Polski","Polski",null,null]},{"Środa":["Angielski","Matma","Chemia","Fizyka","Historia","Informatyka","Niemiecki",null,null]},{Czwartek:["Angielski","Matma","Biologia","Polski","Religia","WF","Informatyka","Niemiecki",null]},{"Piątek":["Angielski","Matma","Fizyka","Geografia","Polski","WF","WF",null,null]}]},"grupa 2":{startingHour:[8,0],lessonSpan:45,breaks:[5,10,15,5,5,10,5,5,5],lessons:[{"Poniedziałek":[null,null,"Angielski","Wychowaw.","Historia","Matma","Filozofia","Religia",null]},{Wtorek:[null,null,"WOS","Matma","EDB","Polski","Polski","WF","WF"]},{"Środa":["WF","Matma","Chemia","Angielski","Historia","Niemiecki","Informatyka",null,null]},{Czwartek:[null,"Matma","Biologia","Polski","Religia","Fizyka","Niemiecki","Informatyka",null]},{"Piątek":[null,"Matma","Fizyka","Geografia","Polski","Angielski","Angielski",null,null]}]}}:null,isNotAuth=null===plans;if(!isNotAuth){const generateHourArray=(startingHour,breaks,lessonSpan)=>{let hours=[];return breaks.forEach((item,index)=>{let date=new Date;if(date.setHours(startingHour[0]),date.setMinutes(startingHour[1]),index>0){const breaksThatPassed=breaks.slice(0,index);let sum=0;breaksThatPassed.forEach(breakThatPassed=>{sum+=breakThatPassed}),date.setMinutes(date.getMinutes()+sum+(lessonSpan*index+1)-1)}hours.push([date.getHours(),date.getMinutes(),index])}),hours},renderTable=plan=>{if(isNotAuth)return;planLekcji.innerHTML="";const{breaks:breaks,lessonSpan:lessonSpan,startingHour:startingHour,lessons:lessons}=plan,rows=[document.createElement("tr")],hourArray=generateHourArray(startingHour,breaks,lessonSpan);breaks.forEach(item=>{rows.push(document.createElement("tr"))});const colAmt=lessons.length+1;rows.forEach((row,index)=>{if(0===index)for(let i=0;i<colAmt;i++)if(0===i){const cell=document.createElement("th");cell.textContent="Trzmielarz",row.appendChild(cell)}else{const cell=document.createElement("th");cell.textContent=Object.keys(lessons[i-1])[0],cell.classList.add(Object.keys(lessons[i-1])[0]),cell.classList.add("day"),row.appendChild(cell)}else for(let i=0;i<colAmt;i++)if(0===i){const cell=document.createElement("td");cell.classList.add(`hr_${index}`),cell.classList.add("hr");const lessonStartDate=new Date;lessonStartDate.setHours(hourArray[index-1][0]),lessonStartDate.setMinutes(hourArray[index-1][1]);const lessonEndDate=new Date(lessonStartDate.getTime()+6e4*lessonSpan),startHours=lessonStartDate.getHours();let startMintues=lessonStartDate.getMinutes();startMintues=1==String(startMintues).length?"0"+startMintues:startMintues;const endHours=lessonEndDate.getHours();let endMinutes=lessonEndDate.getMinutes();endMinutes=1==String(endMinutes).length?"0"+endMinutes:endMinutes,cell.textContent=`${startHours}:${startMintues} - ${endHours}:${endMinutes}`,row.appendChild(cell)}else{const cell=document.createElement("td");cell.classList.add(`${Object.keys(lessons[i-1])[0]}_${index}`),cell.classList.add(`${Object.keys(lessons[i-1])[0]}_lesson`),cell.textContent=lessons[i-1][Object.keys(lessons[i-1])[0]][index-1],row.appendChild(cell)}}),rows.forEach(row=>{planLekcji.appendChild(row)})};let renderedTable="grupa 1";const planLekcji=document.getElementById("plan"),planIdSpan=document.querySelector("#plan_id"),timeNowSpan=document.querySelector("#time_now"),currentLessonSpan=document.querySelector("#current_lesson"),nextLessonSpan=document.querySelector("#next_lesson"),changeButton=document.querySelector("#switch_plan"),timeTillBreakSpan=document.querySelector("#time_till_break");planIdSpan.textContent=renderedTable,renderTable(plans[renderedTable]);const updateCurrentLesson=()=>{if(isNotAuth)return;const currPlan=plans[renderedTable],todayDate=new Date;timeNowSpan.textContent=`${todayDate.getHours()}:${todayDate.getMinutes()>9?todayDate.getMinutes():"0"+todayDate.getMinutes()}:${todayDate.getSeconds()>9?todayDate.getSeconds():"0"+todayDate.getSeconds()}`;const day=todayDate.getDay(),hour=todayDate.getHours(),minute=todayDate.getMinutes(),nextLessonStartingTime=new Date,isWeekend=6===day||7===day;let timeUntilNextLesson;if(isWeekend)currentLessonSpan.textContent="Weekend!",nextLessonSpan.textContent="-";else{let todayLessons=currPlan.lessons[day-1];const nameOfTheDay=Object.keys(todayLessons)[0];let dateObjects=[],isBreak=!1;todayLessons=todayLessons[Object.keys(todayLessons)[0]];const hourArray=generateHourArray(currPlan.startingHour,currPlan.breaks,currPlan.lessonSpan);hourArray.forEach(timeSet=>{newDate=new Date,newDate.setHours(timeSet[0]),newDate.setMinutes(timeSet[1]),timeSet[0]<hour?dateObjects.push([newDate.getTime(),timeSet[2]]):timeSet[0]===hour&&timeSet[1]<=minute&&dateObjects.push([newDate.getTime(),timeSet[2]])}),dateObjects=dateObjects.map(dObj=>[dObj[0]-todayDate.getTime(),dObj[1]]);let min=[null,-1];for(let i=0;i<dateObjects.length;i++)(null===min[0]||Math.abs(dateObjects[i][0])<min[0])&&(min=[Math.abs(dateObjects[i][0]),dateObjects[i][1]]);const currentLessonStartingTime=new Date;currentLessonStartingTime.setHours(hourArray[min[1]][0]),currentLessonStartingTime.setMinutes(hourArray[min[1]][1]),currentLessonStartingTime.setSeconds(0),currentLessonStartingTime.setMilliseconds(0);const timeFromLastLesson=currentLessonStartingTime.getTime()-Date.now(),timeFromLastLessonMinutes=Math.abs(timeFromLastLesson/6e4);timeFromLastLessonMinutes>=currPlan.lessonSpan?(currentLessonSpan.textContent="Przerwa!",isBreak=!0):null===todayLessons[min[1]]?currentLessonSpan.textContent="-":currentLessonSpan.textContent=todayLessons[min[1]];let lessonsTodayReverse=Array.from(todayLessons).reverse(),lessonsTodayNoNullAtEnd;lessonsTodayReverse.forEach((item,index)=>{null!==item&&(lessonsTodayNoNullAtEnd=lessonsTodayReverse.splice(index).reverse())});const amtOfLessonsToday=lessonsTodayNoNullAtEnd.length,lastLesson=hourArray[amtOfLessonsToday-1],lastLessonStartingTime=new Date;lastLessonStartingTime.setHours(lastLesson[0]),lastLessonStartingTime.setMinutes(lastLesson[1]),lastLessonStartingTime.setSeconds(0),lastLessonStartingTime.setMilliseconds(0);const lastLessonEndingTime=new Date(lastLessonStartingTime.getTime()+6e4*currPlan.lessonSpan);lastLessonEndingTime.getTime()<=Date.now()?(currentLessonSpan.textContent="Chata!",nextLessonSpan.textContent="-",timeUntilNextLesson=null):lastLessonStartingTime.getTime()<=Date.now()?(nextLessonSpan.textContent="Chata",timeUntilNextLesson=null):(null===todayLessons[min[1]+1]?nextLessonSpan.textContent="-":nextLessonSpan.textContent=todayLessons[min[1]+1],nextLessonStartingTime.setHours(hourArray[min[1]+1][0]),nextLessonStartingTime.setMinutes(hourArray[min[1]+1][1]),nextLessonStartingTime.setSeconds(0),nextLessonStartingTime.setMilliseconds(0),timeUntilNextLesson=nextLessonStartingTime.getTime()-Date.now());const timeTillBreak=currPlan.lessonSpan-timeFromLastLessonMinutes;if(timeTillBreak>0)timeTillBreakSpan.textContent=`Do przerwy: ${Math.ceil(timeTillBreak)} min.`;else if(null!==timeUntilNextLesson){const helper=new Date(timeUntilNextLesson);timeTillBreakSpan.textContent=`Do lekcji: ${helper.getMinutes()+1} min.`}else timeTillBreakSpan.textContent="Na nic nie czekasz!";let offset=isBreak?2:1;const dayCells=document.querySelectorAll(".day");dayCells.forEach(cell=>{cell.classList.contains(nameOfTheDay)?cell.classList.add("active"):cell.classList.remove("active")});const lessonsOfTheDay=document.querySelectorAll(`.${nameOfTheDay}_lesson`);lessonsOfTheDay.forEach(lesson=>{lesson.classList.contains(`${nameOfTheDay}_${min[1]+offset}`)?lesson.classList.add("active"):lesson.classList.remove("active")});const hourCells=document.querySelectorAll(".hr");hourCells.forEach(cell=>{cell.classList.contains(`hr_${min[1]+offset}`)?cell.classList.add("active"):cell.classList.remove("active")})}};changeButton.addEventListener("click",()=>{renderedTable="grupa 1"===renderedTable?"grupa 2":"grupa 1",renderTable(plans[renderedTable]),updateCurrentLesson(),planIdSpan.textContent=renderedTable}),setInterval(updateCurrentLesson,1e3)}